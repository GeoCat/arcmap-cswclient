using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using System.IO;
using System.Net;
using System.Xml;
using System.Xml.Xsl;

namespace ArcMapAddin1
{
    public partial class FormViewMetadata : Form
    {
        public FormViewMetadata()
        {
            InitializeComponent();
        }

        public void OpenMetadataDoc(string urlMetadataDoc)
        {
            string tmpInput = GenerateTempFilename("Meta", "xml");
            XmlWriter pXWriter = new XmlTextWriter(tmpInput, Encoding.UTF8);
            pXWriter.WriteRaw(GetMetadataDoc(urlMetadataDoc));
            pXWriter.Close();

            string tmpOutput = XmlTransform(tmpInput);
            webBrowserMetadata.Navigate(tmpOutput);

        }

        private string XmlTransform(string input)
        {
            string tmpOutput = GenerateTempFilename("Meta", "html");
            XslTransform pXslTransform = new XslTransform();
            pXslTransform.Load("ISO19139ToHTML.xsl");
            pXslTransform.Transform(input, tmpOutput);

            return tmpOutput;
        }

        private string GenerateTempFilename(string prefix, string surfix)
        {
            // todo: use System.IO.Path.GetRandomFileName() to accomodate prefix;
            //       it will avoid the issue of .tmp file being generated by system
            string tempFilename = System.IO.Path.GetTempFileName();
            try { System.IO.File.Delete(tempFilename); }
            catch { }
            tempFilename = System.IO.Path.ChangeExtension(tempFilename, surfix);

            return tempFilename;
        }

        public string GetMetadataDoc(string url)
        {
            HttpWebResponse strResponse = MetaDataRequest(url);
            return MetaDataResponseString(strResponse);
        }

        private HttpWebResponse MetaDataRequest(string strMetaDataUrl)
        {
            Uri metaDataUri = new Uri(strMetaDataUrl);
            HttpWebRequest metaDataRequest = (HttpWebRequest)WebRequest.Create(metaDataUri);
            metaDataRequest.Method = "GET";
            metaDataRequest.ContentType = "text/xml;charset=UTF-8";

            HttpWebResponse response = null;
            try
            {
                response = (HttpWebResponse)metaDataRequest.GetResponse();
            }
            catch (Exception ex)
            {
                throw ex;
            }

            return response;
        }

        private string MetaDataResponseString(HttpWebResponse response)
        {
            Stream responseStream = response.GetResponseStream();
            StreamReader responseReader = new StreamReader(responseStream);
            string strResponse = responseReader.ReadToEnd();
            responseReader.Close();

            return strResponse;
        }

    }
}
